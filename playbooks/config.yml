##
# 安装基础软件
#
#
##
# @leif160519 @2020.08.29
# 默认配置用户为root，其他用户请跟参数-e username=ubuntu
####
---
- name: 系统设置
  hosts: all
  vars:
    username: root
  tags: config
  tasks:
    - name: 配置SSH   # {{{
      lineinfile:
        dest: /etc/ssh/sshd_config
        regexp: '^#UseDNS'
        line: 'UseDNS no'

    - lineinfile:
        dest: /etc/ssh/sshd_config
        regexp: '^#GSSAPIAuthentication'
        line: 'GSSAPIAuthentication no'

    - lineinfile:
        dest: /etc/ssh/sshd_config
        regexp: '^#ClientAliveInterval'
        line: 'ClientAliveInterval 60'

    - lineinfile:
        dest: /etc/ssh/sshd_config
        regexp: '^#ClientAliveCountMax'
        line: 'ClientAliveCountMax 60'

    - lineinfile:
        dest: /etc/ssh/sshd_config
        regexp: "^#PermitRootLogin"
        line: "PermitRootLogin without-password"

    - lineinfile:
        dest: /etc/ssh/sshd_config
        regexp: "^#PasswordAuthentication"
        line: "PasswordAuthentication yes"

    - lineinfile:
        dest: /etc/ssh/sshd_config
        regexp: "^#PermitEmptyPasswords"
        line: "PermitEmptyPasswords no"

    - lineinfile:
        dest: /etc/ssh/ssh_config
        regexp: '^#   StrictHostKeyChecking'
        line: '    StrictHostKeyChecking no'

    - blockinfile:
        path: /etc/ssh/ssh_config
        block: |2
              ServerAliveInterval 20
              ServerAliveCountMax 999

    - service:
        name: sshd
        state: reloaded
        # }}}

    - name: 修改Hostname # {{{
      hostname:
        name: "{{ inventory_hostname }}"
      # }}}

    - name: 屏蔽系统错误报告 # {{{
      file:
        path: /var/crash/
        state: absent
      when: ansible_distribution == "Ubuntu"

    - lineinfile:
        dest: /etc/default/apport
        regexp: '^enabled='
        line: 'enabled=0'
      when: ansible_distribution == "Ubuntu"
       # }}}

    - name: 设置当前用户执行sudo命令不需要密码 # {{{ 为何不直接修改sudoers文件:风险太大
      lineinfile:
        dest: /etc/sudoers.d/{{ item }}
        create: yes
        line: '{{ item }} ALL=(ALL) NOPASSWD:ALL'
        mode: 0440
        owner: root
        group: root
        validate: /usr/sbin/visudo -cf %s
      with_items:
        - "{{ username }}"
      when: not ( item is match "root" )
      # }}}

    - name: 禁用selinux(重启后生效) # {{{
      lineinfile:
        dest: /etc/selinux/config
        regexp: '^SELINUX='
        line: 'SELINUX=disabled'
      when: ansible_os_family == "RedHat"
      # }}}

    - name: 禁用防火墙 #{{{
      service:
        name: firewalld
        state: stopped
        enabled: no
      when: ansible_os_family == "RedHat"
      # }}}

    - name: 给pip换源 # {{{
      file:
        path: ~{{ item }}/.pip
        state: directory
        owner: "{{ item }}"
        group: "{{ item }}"
        mode: 0755
      with_items:
        - "{{ username }}"

    - blockinfile:
        path: ~{{ item }}/.pip/pip.conf
        create: yes
        owner: "{{ item }}"
        group: "{{ item }}"
        block: |
          [global]
          index-url = http://mirrors.aliyun.com/pypi/simple/
          [install]
          trusted-host=mirrors.aliyun.com
      with_items:
        - "{{ username }}"
      # }}}

    - name: 配置关机等待时间 # {{{
      block:
        - lineinfile:
            dest: /etc/systemd/system.conf
            regexp: "^#DefaultTimeoutStartSec"
            line: "DefaultTimeoutStartSec=10s"

        - lineinfile:
            dest: /etc/systemd/system.conf
            regexp: "^#DefaultTimeoutStopSec"
            line: "DefaultTimeoutStopSec=10s"
      # }}}

    - name: 打开cron日志 # {{{
      block:
        - replace:
            path: /etc/rsyslog.d/50-default.conf
            regexp: "#cron"
            replace: "cron"
          when: ansible_distribution == "Ubuntu"

        - replace:
            path: /etc/rsyslog.conf
            regexp: "#cron"
            replace: "cron"
          when: (ansible_distribution == "Debian") or (ansible_os_family == "RedHat")

        - service:
            name: rsyslog
            state: restarted
            enabled: yes
      # }}}

    - name: 配置bash # {{{
      block:
        - file:
            path: /etc/bash.d
            state: directory

        - template:
            src: files/bash.d/bash-ps1.sh.j2
            dest: /etc/bash.d/bash-ps1.sh
            force: yes
            mode: 0755
            owner: root
            group: root

        - copy:
            src: files/bash.d/bash-alias.sh
            dest: /etc/bash.d/
            mode: 0755
            owner: root
            group: root

        - blockinfile:
            dest: "~{{ item }}/.bashrc"
            create: yes
            marker: '#{mark} ANSIBLE MANAGED BASHRC'
            owner: "{{ item }}"
            group: "{{ item }}"
            block: |
              if [ -d /etc/bash.d ]; then
                for i in /etc/bash.d/*.sh; do
                  if [ -r $i ]; then
                    . $i
                  fi
                done
                unset i
              fi
          with_items:
            - "{{ username }}"

        - blockinfile:
            dest: ~{{ item }}/.bashrc
            create: yes
            marker: '#{mark} ANSIBLE MANAGED HISTORY'
            owner: "{{ item }}"
            group: "{{ item }}"
            block: |
              shopt -s histappend
              PROMPT_COMMAND="history -a;$PROMPT_COMMAND"
              export HISTTIMEFORMAT="%F %T "
          with_items:
            - "{{ username }}"
        # }}}

    - name: 配置时钟和时区 # {{{
      timezone:
        hwclock: UTC
        name: Asia/Shanghai
      # }}}

    - name: 设置默认编辑器为vim # {{{
      lineinfile:
        dest: "~{{ item }}/.selected_editor"
        create: yes
        mode: 0644
        owner: "{{ item }}"
        group: "{{ item }}"
        line: 'SELECTED_EDITOR="/usr/bin/vim.basic"'
        state: present
      with_items:
        - "{{ username }}"
      # }}}

    - name: 重写定时任务模板 # {{{
      template:
        dest: "/var/spool/cron/crontabs/{{ item }}"
        src: files/crontab
        mode: 0644
        owner: "{{ item }}"
        group: crontab
      with_items:
        - "{{ username }}"
      ignore_errors: yes
     # }}}

    - name: 配置git #{{{
      shell: |
        git config --global core.editor vim
        git config --global core.quotepath false
      ignore_errors: yes
     # }}}
