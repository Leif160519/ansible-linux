##
# 安装oh-my-zsh
#
#
##
# @leif160519 @2020.08.29
# 默认安装用户为root，指定其他用户请用-e username=ubuntu
####
---
- name: 安装oh-my-zsh
  hosts: all
  tags: [zsh]
  vars:
    username: root
    zsh_theme: random  # oh-my-zsh主题，默认为random(随机),可以设置为其他，比如agnoster
  tasks:
    - name: 安装zsh和autojump # {{{
      package:
        name: "{{ item }}"
        state: latest
      with_items:
        - zsh
        - autojump
        - fortune-mod # zsh theme
      # }}}

    - name: 清理下载的安装包缓存(Debian) # {{{
      shell: apt clean && apt autoclean
      ignore_errors: yes
      when: ansible_os_family == "Debian"
      # }}}

    - name: 清理下载的安装包缓存(RedHat) # {{{
      shell: yum clean all
      ignore_errors: true
      when: ansible_os_family == "RedHat"
      # }}}

    - shell: echo ${ZSH_CUSTOM:-~{{ username }}/.oh-my-zsh/custom}/plugins
      register: plugins_path

    - name: 切换默认shell为zsh # {{{
      shell: usermod -s /bin/zsh "{{ username }}"
      ignore_errors: yes
      # }}}

    - stat:
        path: ~{{ username }}/.oh-my-zsh
      register: oh_my_zsh

    - name: 安装oh-my-zsh # {{{
      get_url:
        url: https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh
        dest: /tmp/install.sh
        mode: 0755
        owner: "{{ username }}"
        group: "{{ username }}"
      when: oh_my_zsh.stat.exists == false

    - shell: su - "{{ username }}" -s /bin/bash /tmp/install.sh
      ignore_errors: yes
      when: oh_my_zsh.stat.exists == false
      # }}}

    - stat:  # {{{ stat
        path: "{{ plugins_path.stdout }}/zsh-syntax-highlighting"
      register: zsh_syntax_highlighting

    - stat:
        path: "{{ plugins_path.stdout }}/zsh-autosuggestions"
      register: zsh_autosuggestions

    - stat:
        path: "{{ plugins_path.stdout }}/zsh-completions"
      register: zsh_completions

    - stat:
        path: "{{ plugins_path.stdout }}/zsh-history-substring-search"
      register: zsh_history_substring_search

    - stat:
        path: "{{ plugins_path.stdout }}/history-search-multi-word"
      register: history_search_multi_word

    - stat:
        path: "{{ plugins_path.stdout }}/fast-syntax-highlighting"
      register: fast_syntax_highlighting
      # }}}

    - name: 安装zsh-syntax-highlighting:模仿fish命令行高亮的插件 # {{{
      git:
        repo: https://github.com/zsh-users/zsh-syntax-highlighting.git
        dest: "{{ plugins_path.stdout }}/zsh-syntax-highlighting"
        clone: yes
        update: yes
      when: zsh_syntax_highlighting.stat.exists == false
      # }}}

    - name: 安装zsh-autosuggestions:根据命令历史记录自动推荐和提示的插件 # {{{
      git:
        repo: https://github.com/zsh-users/zsh-autosuggestions
        dest: "{{ plugins_path.stdout }}/zsh-autosuggestions"
        clone: yes
        update: yes
      when: zsh_autosuggestions.stat.exists == false
      # }}}

    - name: 安装zsh-completions:自动命令补全，类似bash-completions功能的插件 # {{{
      git:
        repo: https://github.com/zsh-users/zsh-completions
        dest: "{{ plugins_path.stdout }}/zsh-completions"
        clone: yes
        update: yes
      when: zsh_completions.stat.exists == false
      # }}}

    - name: history-substring-search:按住向上箭头可以搜索出现过该关键字的历史命令 # {{{
      git:
        repo: https://github.com/zsh-users/zsh-history-substring-search
        dest: "{{ plugins_path.stdout }}/zsh-history-substring-search"
        clone: yes
        update: yes
      when: zsh_history_substring_search.stat.exists == false
      # }}}

    - name: history-search-multi-word:ctrl+r搜索历史记录 # {{{
      git:
        repo: https://github.com/zdharma-continuum/history-search-multi-word
        dest: "{{ plugins_path.stdout }}/history-search-multi-word"
        clone: yes
        update: yes
      when: history_search_multi_word.stat.exists == false
      # }}}

    - name: fast-syntax-highlighting:丰富的语法高亮 # {{{
      git:
        repo: https://github.com/zdharma-continuum/fast-syntax-highlighting
        dest: "{{ plugins_path.stdout }}/fast-syntax-highlighting"
        clone: yes
        update: yes
      when: fast_syntax_highlighting.stat.exists == false
      # }}}

    - name: 修改zsh主题为随机 # {{{
      lineinfile:
        dest: ~{{ username }}/.zshrc
        regexp: '^ZSH_THEME='
        line: 'ZSH_THEME="{{ zsh_theme }}"'
        owner: "{{ username }}"
        group: "{{ username }}"
        # }}}

    - name: 夹带点私货O(∩_∩)O哈哈哈~ # {{{
      tags: never,leif
      block:
        - lineinfile:
            dest: ~{{ username }}/.zshrc
            regexp: '^ZSH_THEME='
            line: 'ZSH_THEME=agnoster'
            owner: "{{ username }}"
            group: "{{ username }}"

        - lineinfile:
            path: ~{{ username }}/.zshrc
            line: "{{ item }}"
            owner: "{{ username }}"
            group: "{{ username }}"
          with_items:
            - DEFAULT_USER=$USER
            - CURRENT_BG=""
            - DALLAS_CURRENT_TIME_="%{$fg[yellow]%}%* %{$fg[red]%}%h%%%{$reset_color%}"
            - PS1="${DALLAS_CURRENT_TIME_}${PS1}"
            - HISTSIZE=100000
            - SAVEHIST=100000
            - HISTFILESIZE=100000
      when: username is not match("root")
      # }}}

    - name: 删除zsh默认插件配置 # {{{ | 配置zsh插件
      lineinfile:
        dest: ~{{ username }}/.zshrc
        regexp: '^plugins='
        owner: "{{ username }}"
        group: "{{ username }}"
        state: absent

    - name: 配置zsh插件
      blockinfile:
        path: ~{{ username }}/.zshrc
        insertbefore: "^source"
        owner: "{{ username }}"
        group: "{{ username }}"
        block: |
          plugins=(
                  git
                  zsh-autosuggestions
                  zsh-syntax-highlighting
                  zsh-completions
                  z
                  history-substring-search
                  command-not-found
                  colored-man-pages
                  extract
                  history-search-multi-word
                  fast-syntax-highlighting
          )
      # }}}

    - name: 重新登录shell生效 # {{{
      shell: echo "重新登录shell生效"
      # }}}
