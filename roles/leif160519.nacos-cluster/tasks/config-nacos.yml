---
- name: mkdir
  file:
    path: "{{ item }}"
    state: directory
    owner: root
    group: root
    mode: 0755
  with_items:
    - "{{ nacos_app_root_dir }}"
    - "{{ nacos_mysql_root_dir }}"
  when: not inventory_hostname == "nacos-proxy"

- name: distribution profile - nacos docker-compose
  template:
    src: nacos/app/docker-compose.yml.j2
    dest: "{{ nacos_app_root_dir }}/docker-compose.yml"
    owner: root
    group: root
    mode: 0644
  when: not inventory_hostname == "nacos-proxy"

- name: distribution profile - nacos env
  template:
    src: nacos/app/nacos.env.j2
    dest: "{{ nacos_app_root_dir }}/nacos.env"
    owner: root
    group: root
    mode: 0644
  when: not inventory_hostname == "nacos-proxy"

- name: distribution profile - mysql docker-compose
  template:
    src: nacos/mysql/docker-compose.yml.j2
    dest: "{{ nacos_mysql_root_dir }}/docker-compose.yml"
    owner: root
    group: root
    mode: 0644
  when: inventory_hostname == "nacos-mysql"

- name: distribution profile - mysql env
  template:
    src: nacos/mysql/mysql.env.j2
    dest: "{{ nacos_mysql_root_dir }}/mysql.env"
    owner: root
    group: root
    mode: 0644
  when: inventory_hostname == "nacos-mysql"

- name: install nginx
  package:
    name: nginx
    state: latest
  when: inventory_hostname == "nacos-proxy"

- name: distribution profile - nginx redhat
  template:
    src: nacos/nginx/nacos.conf.j2
    dest: /etc/nginx/conf.d/nacos.conf
    owner: root
    group: root
    mode: 0644
  when: ansible_os_family == "RedHat" and inventory_hostname == "nacos-proxy"

- name: distribution profile - nginx debian
  template:
    src: nacos/nginx/nacos.conf.j2
    dest: /etc/nginx/sites-enabled/nacos.conf
    owner: root
    group: root
    mode: 0644
  when: ansible_os_family == "Debian" and inventory_hostname == "nacos-proxy"

- name: reload nginx service
  service:
    name: nginx
    state: reloaded
    enabled: true
    daemon_reload: true
  when: inventory_hostname == "nacos-proxy"
