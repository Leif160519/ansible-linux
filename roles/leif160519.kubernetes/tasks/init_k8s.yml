---
- name: init kubernetes master
  block:
    - name: init kubernetes
      shell: kubeadm init --pod-network-cidr={{ pod_network }} --image-repository {{ image_repository }} --apiserver-advertise-address={{ hostvars['k8s-master-01']['ansible_host'] }} --kubernetes-version=v{{ k8s_version }}
      ignore_errors: true

    - name: start kubelet service
      service:
        name: kubelet
        state: started
        enabled: true
        daemon_reload: true

    - name: check kubelet service status
      shell: systemctl status kubelet | grep -i running
      changed_when: false
      register: kubelet_status

    - assert:
        that: kubelet_status.rc == 0
        success_msg: "kubelet service started successfully"
        fail_msg: "kubelet service started failed, please check !"

    - name: as root user, run
      shell: |
        export KUBECONFIG=/etc/kubernetes/admin.conf
        kubectl get nodes
      register: cluster_info

    - debug:
        var: cluster_info.stdout_lines

    - name: config calico.yaml
      tags: calico
      template:
        dest: /root/calico.yaml
        src: calico.yaml.j2
        mode: 0644

    - name: apply calico
      tags: calico
      shell: kubectl apply -f /root/calico.yaml

    - name: config kube-flannel.yml
      tags: never, flannel
      template:
        dest: /root/kube-flannel.yml
        src: kube-flannel.yml.j2
        mode: 0644

    - name: apply flannel
      tags: never, flannel
      shell: kubectl apply -f /root/kube-flannel.yml

  when: inventory_hostname == "k8s-master-01"

- name: get join token
  shell: |
    export KUBECONFIG=/etc/kubernetes/admin.conf
    kubeadm token create --print-join-command
  register: join_command
  when: inventory_hostname == "k8s-master-01"

- debug:
    var: join_command.stdout_lines
  when: inventory_hostname == "k8s-master-01"

- name: join worker
  shell: "{{ join_command.stdout_lines[0] }}"
  when: not inventory_hostname == "k8s-master-01"

- name: config kubectl completion
  lineinfile:
    path: /etc/profile
    line: "source <(kubectl completion bash)"

- name: config dashboard yaml
  template:
    dest: /root/{{ item }}
    src: "{{ item }}.j2"
    mode: 0644
  when: inventory_hostname == "k8s-master-01"
  with_items:
    - dashboard.yaml
    - dashboard-admin.yaml

- name: install dashboard yaml
  shell: |
    export KUBECONFIG=/etc/kubernetes/admin.conf
    kubectl apply -f /root/dashboard.yaml
    kubectl apply -f /root/dashboard-admin.yaml
  when: inventory_hostname == "k8s-master-01"

- name: get dashboard token
  shell: |
    export KUBECONFIG=/etc/kubernetes/admin.conf
    kubectl -n kubernetes-dashboard describe secret admin-user
  register: token_result

- debug:
    var: token_result.stoudt_lines
