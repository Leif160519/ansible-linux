---
- name: monitors - Write monitors
  template:
    src: monitor.j2
    dest: "{{ monit_includes }}/{{ item.name }}"
    owner: root
    group: root
  with_items: "{{ monit_services }}"
  notify: restart monit

- name: monitors - Create facts directory
  file:
    path: "/etc/ansible/facts.d"
    mode: 0755
    state: directory

- name: monitors - Registers configured monitors
  template:
    src: "monit.fact.j2"
    dest: "/etc/ansible/facts.d/monit.fact"
    mode: 0644
  register: monit_write_facts

- name: monitors - Reload facts
  setup:
    gather_subset: min
    filter: "ansible_local"
  when: monit_write_facts.changed

- name: monitors - availabled monitors
  command: ls -1 {{ monit_includes }}
  register: monit_services_present
  changed_when: false

- name: monitors - enabled monitors
  set_fact:
    monit_services_enabled: "{{ monit_services | map(attribute='name') | list + ['mail', 'webinterface'] }}"

- name: monitors - Remove unused monitors
  file:
    path: "{{ monit_includes }}/{{ item }}"
    state: absent
  with_items: "{{ monit_services_present.stdout_lines | default([]) | difference(monit_services_enabled) }}"
  notify: restart monit
